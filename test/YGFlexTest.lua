--[[
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the LICENSE
 * file in the root directory of this source tree.
 ]]
-- @Generated by gentest/gentest.rb from gentest/fixtures/YGFlexTest.html

local Yoga = require( "../yoga" )
local ffi  = require( "ffi" )

-- TEST(YogaTest, flex_basis_flex_grow_column) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetWidth(root, 100);
  Yoga.YGNodeStyleSetHeight(root, 100);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child0, 1);
  Yoga.YGNodeStyleSetFlexBasis(root_child0, 50);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child1, 1);
  Yoga.YGNodeInsertChild(root, root_child1, 1);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(75 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(75 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(25 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(75 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(75 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(25 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_shrink_flex_grow_row) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexDirection(root, ffi.C.YGFlexDirectionRow);
  Yoga.YGNodeStyleSetWidth(root, 500);
  Yoga.YGNodeStyleSetHeight(root, 500);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexShrink(root_child0, 1);
  Yoga.YGNodeStyleSetWidth(root_child0, 500);
  Yoga.YGNodeStyleSetHeight(root_child0, 100);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexShrink(root_child1, 1);
  Yoga.YGNodeStyleSetWidth(root_child1, 500);
  Yoga.YGNodeStyleSetHeight(root_child1, 100);
  Yoga.YGNodeInsertChild(root, root_child1, 1);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(500 == Yoga.YGNodeLayoutGetWidth(root));
  assert(500 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(250 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(250 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(250 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(500 == Yoga.YGNodeLayoutGetWidth(root));
  assert(500 == Yoga.YGNodeLayoutGetHeight(root));

  assert(250 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(250 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(250 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_shrink_flex_grow_child_flex_shrink_other_child) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexDirection(root, ffi.C.YGFlexDirectionRow);
  Yoga.YGNodeStyleSetWidth(root, 500);
  Yoga.YGNodeStyleSetHeight(root, 500);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexShrink(root_child0, 1);
  Yoga.YGNodeStyleSetWidth(root_child0, 500);
  Yoga.YGNodeStyleSetHeight(root_child0, 100);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child1, 1);
  Yoga.YGNodeStyleSetFlexShrink(root_child1, 1);
  Yoga.YGNodeStyleSetWidth(root_child1, 500);
  Yoga.YGNodeStyleSetHeight(root_child1, 100);
  Yoga.YGNodeInsertChild(root, root_child1, 1);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(500 == Yoga.YGNodeLayoutGetWidth(root));
  assert(500 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(250 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(250 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(250 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(500 == Yoga.YGNodeLayoutGetWidth(root));
  assert(500 == Yoga.YGNodeLayoutGetHeight(root));

  assert(250 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(250 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(250 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_basis_flex_grow_row) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexDirection(root, ffi.C.YGFlexDirectionRow);
  Yoga.YGNodeStyleSetWidth(root, 100);
  Yoga.YGNodeStyleSetHeight(root, 100);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child0, 1);
  Yoga.YGNodeStyleSetFlexBasis(root_child0, 50);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child1, 1);
  Yoga.YGNodeInsertChild(root, root_child1, 1);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(75 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(75 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(25 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(25 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(75 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(25 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_basis_flex_shrink_column) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetWidth(root, 100);
  Yoga.YGNodeStyleSetHeight(root, 100);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexShrink(root_child0, 1);
  Yoga.YGNodeStyleSetFlexBasis(root_child0, 100);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexBasis(root_child1, 50);
  Yoga.YGNodeInsertChild(root, root_child1, 1);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(50 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(50 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_basis_flex_shrink_row) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexDirection(root, ffi.C.YGFlexDirectionRow);
  Yoga.YGNodeStyleSetWidth(root, 100);
  Yoga.YGNodeStyleSetHeight(root, 100);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexShrink(root_child0, 1);
  Yoga.YGNodeStyleSetFlexBasis(root_child0, 100);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexBasis(root_child1, 50);
  Yoga.YGNodeInsertChild(root, root_child1, 1);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(50 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(50 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root_child1));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_shrink_to_zero) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetHeight(root, 75);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetWidth(root_child0, 50);
  Yoga.YGNodeStyleSetHeight(root_child0, 50);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexShrink(root_child1, 1);
  Yoga.YGNodeStyleSetWidth(root_child1, 50);
  Yoga.YGNodeStyleSetHeight(root_child1, 50);
  Yoga.YGNodeInsertChild(root, root_child1, 1);

  local YGNodeRef root_child2 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetWidth(root_child2, 50);
  Yoga.YGNodeStyleSetHeight(root_child2, 50);
  Yoga.YGNodeInsertChild(root, root_child2, 2);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root));
  assert(75 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(50 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetHeight(root_child1));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child2));
  assert(50 == Yoga.YGNodeLayoutGetTop(root_child2));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child2));
  assert(50 == Yoga.YGNodeLayoutGetHeight(root_child2));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root));
  assert(75 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(50 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(0 == Yoga.YGNodeLayoutGetHeight(root_child1));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child2));
  assert(50 == Yoga.YGNodeLayoutGetTop(root_child2));
  assert(50 == Yoga.YGNodeLayoutGetWidth(root_child2));
  assert(50 == Yoga.YGNodeLayoutGetHeight(root_child2));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_basis_overrides_main_size) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetWidth(root, 100);
  Yoga.YGNodeStyleSetHeight(root, 100);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child0, 1);
  Yoga.YGNodeStyleSetFlexBasis(root_child0, 50);
  Yoga.YGNodeStyleSetHeight(root_child0, 20);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child1, 1);
  Yoga.YGNodeStyleSetHeight(root_child1, 10);
  Yoga.YGNodeInsertChild(root, root_child1, 1);

  local YGNodeRef root_child2 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child2, 1);
  Yoga.YGNodeStyleSetHeight(root_child2, 10);
  Yoga.YGNodeInsertChild(root, root_child2, 2);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(60 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(60 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(20 == Yoga.YGNodeLayoutGetHeight(root_child1));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child2));
  assert(80 == Yoga.YGNodeLayoutGetTop(root_child2));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child2));
  assert(20 == Yoga.YGNodeLayoutGetHeight(root_child2));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(60 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(60 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(20 == Yoga.YGNodeLayoutGetHeight(root_child1));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child2));
  assert(80 == Yoga.YGNodeLayoutGetTop(root_child2));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child2));
  assert(20 == Yoga.YGNodeLayoutGetHeight(root_child2));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_grow_shrink_at_most) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetWidth(root, 100);
  Yoga.YGNodeStyleSetHeight(root, 100);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local root_child0_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child0_child0, 1);
  Yoga.YGNodeStyleSetFlexShrink(root_child0_child0, 1);
  Yoga.YGNodeInsertChild(root_child0, root_child0_child0, 0);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0_child0));
  assert(0 == Yoga.YGNodeLayoutGetHeight(root_child0_child0));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root));
  assert(100 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0_child0));
  assert(100 == Yoga.YGNodeLayoutGetWidth(root_child0_child0));
  assert(0 == Yoga.YGNodeLayoutGetHeight(root_child0_child0));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}

-- TEST(YogaTest, flex_grow_less_than_factor_one) {
  local config = Yoga.YGConfigNew();

  local root = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetWidth(root, 200);
  Yoga.YGNodeStyleSetHeight(root, 500);

  local root_child0 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child0, 0.2);
  Yoga.YGNodeStyleSetFlexBasis(root_child0, 40);
  Yoga.YGNodeInsertChild(root, root_child0, 0);

  local YGNodeRef root_child1 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child1, 0.2);
  Yoga.YGNodeInsertChild(root, root_child1, 1);

  local YGNodeRef root_child2 = Yoga.YGNodeNewWithConfig(config);
  Yoga.YGNodeStyleSetFlexGrow(root_child2, 0.4);
  Yoga.YGNodeInsertChild(root, root_child2, 2);
  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionLTR);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(200 == Yoga.YGNodeLayoutGetWidth(root));
  assert(500 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(200 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(132 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(132 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(200 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(92 == Yoga.YGNodeLayoutGetHeight(root_child1));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child2));
  assert(224 == Yoga.YGNodeLayoutGetTop(root_child2));
  assert(200 == Yoga.YGNodeLayoutGetWidth(root_child2));
  assert(184 == Yoga.YGNodeLayoutGetHeight(root_child2));

  Yoga.YGNodeCalculateLayout(root, 0/0, 0/0, ffi.C.YGDirectionRTL);

  assert(0 == Yoga.YGNodeLayoutGetLeft(root));
  assert(0 == Yoga.YGNodeLayoutGetTop(root));
  assert(200 == Yoga.YGNodeLayoutGetWidth(root));
  assert(500 == Yoga.YGNodeLayoutGetHeight(root));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child0));
  assert(0 == Yoga.YGNodeLayoutGetTop(root_child0));
  assert(200 == Yoga.YGNodeLayoutGetWidth(root_child0));
  assert(132 == Yoga.YGNodeLayoutGetHeight(root_child0));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child1));
  assert(132 == Yoga.YGNodeLayoutGetTop(root_child1));
  assert(200 == Yoga.YGNodeLayoutGetWidth(root_child1));
  assert(92 == Yoga.YGNodeLayoutGetHeight(root_child1));

  assert(0 == Yoga.YGNodeLayoutGetLeft(root_child2));
  assert(224 == Yoga.YGNodeLayoutGetTop(root_child2));
  assert(200 == Yoga.YGNodeLayoutGetWidth(root_child2));
  assert(184 == Yoga.YGNodeLayoutGetHeight(root_child2));

  Yoga.YGNodeFreeRecursive(root);

  Yoga.YGConfigFree(config);
--}
